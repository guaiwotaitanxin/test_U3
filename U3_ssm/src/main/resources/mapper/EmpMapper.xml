<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.djin.ssm.mapper.EmpMapper">

    <!--自定义结果集-->
    <resultMap id="empMap" type="Emp">
        <!--配置主键id-->
        <id property="empno" column="empno"/>
        <!--配置其他的字段-->
        <result property="ename" column="ename"/>
        <result property="job" column="job"/>
        <result property="sal" column="sal"/>
        <result property="mgr" column="mgr"/>
        <result property="hiredate" column="hiredate"/>
        <result property="comm" column="comm"/>
        <result property="deptno" column="deptno"/>
    </resultMap>

    <!--1.配置员工部门查询的自定义结果集，预先抓取（多对一）-->
    <!--
        id="empAndDeptMap"  自定义结果集的名字
        type="Emp"  自定义结果集的类型
        extends="empMap"  继承员工表的结果集
    -->
    <resultMap id="empAndDeptMap" type="Emp" extends="empMap">
        <!--
            property="dept"  员工实体对象中的部门对象属性
            column="deptno"  员工部门表的关联字段
            resultMap="cn.com.djin.mybaits.mapper.DeptMapper.deptMap"  部门表的结果集
        -->
         <association property="dept" column="deptno" resultMap="com.hyl.mapper.DeptMapper.deptMap"/>
    </resultMap>

    <!--2.配置员工部门查询的自定义结果集，嵌套查询（多对一）-->
    <resultMap id="empAndSelDeptMap" type="Emp" extends="empMap">
          <!--
             property="dept"  员工实体对象中的部门对象属性
             column="deptno"  员工部门表的关联字段
             select="cn.com.djin.mybaits.mapper.DeptMapper.selDeptByDeptno"  嵌套查询部门数据
             （根据column="deptno" 作为查询的条件查询DeptMapper中的selDeptByDeptno方法，将结果给property="dept" ）
          -->
          <association property="dept" column="deptno" select="com.hyl.mapper.DeptMapper.selDeptByDeptno"/>
    </resultMap>

    <!--要查询的字段-->
    <sql id="sel_emp_cloumn">
        empno,ename,job,sal,mgr,hiredate,comm,deptno
    </sql>

    <!--查询所有员工数据-->
    <select id="selAllEmp" resultMap="empMap">
        select <include refid="sel_emp_cloumn"/> from emp
    </select>

    <!--查询所有员工以及其部门数据(预先抓取)-->
    <select id="selAllEmpAndDept" resultMap="empAndDeptMap">
        select * from emp LEFT JOIN dept on deptno = dept.deptno
    </select>

    <!--查询所有员工以及其部门数据(嵌套查询)-->
    <select id="selAllEmpAndSelDept" resultMap="empAndSelDeptMap">
        select <include refid="sel_emp_cloumn"/> from emp order by empno desc
    </select>

    <!--根据部门编号查询多个员工数据(为了做部门方嵌套查询)-->
    <select id="selEmpsByDeptno" resultMap="empMap">
        select <include refid="sel_emp_cloumn"/> from emp where deptno=#{deptno}
    </select>

    <!--根据员工编号删除员工数据-->
    <delete id="delEmpByEmpno">
        delete from emp where empno=#{empno}
    </delete>

    <!--根据员工编号查询单个员工数据-->
    <select id="selEmpByEmpno" resultMap="empAndSelDeptMap">
        select <include refid="sel_emp_cloumn"/> from emp where empno=#{empno}
    </select>

    <!--修改员工数据-->
    <update id="updEmp">
        update emp
         <set>
             <if test="ename!=null and ename!=''">
                 ename=#{ename},
             </if>
             <if test="job!=null and job!=''">
                 job=#{job},
             </if>
             <if test="sal!=null and sal!=0">
                 sal=#{sal},
             </if>
             <if test="mgr!=null and mgr!=0">
                 mgr=#{mgr},
             </if>
             <if test="hiredate!=null">
                 hiredate=#{hiredate},
             </if>
             <if test="comm!=null and comm!=0">
                 comm=#{comm},
             </if>
             <if test="deptno!=null and deptno!=0">
                 deptno=#{deptno},
             </if>
         </set>
         <where>
             empno=#{empno}
         </where>
    </update>

    <!--添加员工数据-->
    <insert id="insEmp">
        insert into emp values (#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})
    </insert>

    <!---->
    <select id="selEmpAndSelDeptByPramas" resultMap="empAndSelDeptMap">
        select <include refid="sel_emp_cloumn"/> from emp
         <where>
             <if test="emp.ename!=null and emp.ename!=''">
                 and ename like concat("%",#{emp.ename},"%")
             </if>
             <if test="emp.deptno!=null and emp.deptno!=0">
                 and deptno = #{emp.deptno}
             </if>
         </where>
           order by empno desc
    </select>

</mapper>